# -*- coding: utf-8 -*-
"""x_ray.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z48I1aW_Y9BrcXbw16NKPXQw-R2VOrAy
"""

from google.colab import files
files.upload()
!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json
!ls ~/.kaggle
!ls -l ~/.kaggle
!cat ~/.kaggle/kaggle.json
!pip install -q kaggle
!pip install -q kaggle-cli

!kaggle datasets download -d paultimothymooney/chest-xray-pneumonia

from keras.applications.vgg16 import VGG16
from keras.preprocessing import image
from keras.applications.vgg16 import preprocess_input
import numpy as np

from zipfile import ZipFile 
file_name = 'chest-xray-pneumonia.zip'
with ZipFile(file_name, 'r') as zip: 
    zip.printdir() 
    print('Extracting all the files now...') 
    zip.extractall() 
    print('Done!') 
file_name = 'chest_xray.zip'
with ZipFile(file_name, 'r') as zip: 
    zip.printdir() 
    print('Extracting all the files now...') 
    zip.extractall() 
    print('Done!')

import glob
file=glob.glob('chest_xray/train/NORMAL/*.jpeg')

import glob
file1=glob.glob('chest_xray/train/PNEUMONIA/*.jpeg')

model = VGG16(weights='imagenet', include_top=False)
vgg16_list=[]
for i in file:
  img_path = i
  img = image.load_img(img_path, target_size=(224, 224))
  x = image.img_to_array(img)
  x = np.expand_dims(x, axis=0)
  x = preprocess_input(x)
  features=model.predict(x)
  vgg16 = np.array(features)
  vgg16_list.append(vgg16.flatten())

model = VGG16(weights='imagenet', include_top=False)
for i in file1:
  img_path = i
  img = image.load_img(img_path, target_size=(224, 224))
  x = image.img_to_array(img)
  x = np.expand_dims(x, axis=0)
  x = preprocess_input(x)
  features=model.predict(x)
  vgg16 = np.array(features)
  vgg16_list.append(vgg16.flatten())

features=np.array(vgg16_list)
features.shape

label=np.zeros((features.shape[0]))
label[1342:]=1

from sklearn.ensemble import RandomForestClassifier
rlf = RandomForestClassifier()
rlf.fit(features,label)

from sklearn.ensemble import AdaBoostClassifier
alf=AdaBoostClassifier()
alf.fit(features,label)

from sklearn import model_selection
from sklearn.linear_model import LogisticRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn.naive_bayes import GaussianNB 
from sklearn.ensemble import RandomForestClassifier
from mlxtend.classifier import StackingClassifier
clf1 = KNeighborsClassifier()
clf2 = RandomForestClassifier()
clf3 = GaussianNB()
lr = LogisticRegression()
sclf = StackingClassifier(classifiers=[clf1, clf2, clf3,alf], 
                          meta_classifier=lr)

import glob
file2=glob.glob('chest_xray/test/NORMAL/*.jpeg')
file3=glob.glob('chest_xray/test/PNEUMONIA/*.jpeg')
model = VGG16(weights='imagenet', include_top=False)
vgg16_list1=[]
for i in file2:
  img_path = i
  img = image.load_img(img_path, target_size=(224, 224))
  x = image.img_to_array(img)
  x = np.expand_dims(x, axis=0)
  x = preprocess_input(x)
  features1=model.predict(x)
  vgg161 = np.array(features1)
  vgg16_list1.append(vgg161.flatten())
  
for i in file3:
  img_path = i
  img = image.load_img(img_path, target_size=(224, 224))
  x = image.img_to_array(img)
  x = np.expand_dims(x, axis=0)
  x = preprocess_input(x)
  features1=model.predict(x)
  vgg161 = np.array(features1)
  vgg16_list1.append(vgg161.flatten())
  
np.array(vgg16_list1).shape
test_ =np.array(vgg16_list1)

label_=np.zeros((test_.shape[0]))
label_[390:]=1

from sklearn.ensemble import ExtraTreesClassifier
clf = ExtraTreesClassifier()
features.shape
label.shape
clf.fit(features,label)
prediction=clf.predict(test_)

pred_labels = prediction == label_
acc=0.0
for i in pred_labels:
    if i==True:
        acc+=1
print('RandomForestClassifier accuracy=',(acc)/len(pred_labels)*100,'%')